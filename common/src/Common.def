(*
Types, packages, and subprograms useful for Advent of Code
*)

DEFINITION MODULE Common;

(*** Two_Dimensional_Motion ***)

TYPE Direction = (North, South, East, West);

PROCEDURE Opposite (Left, Right: Direction): BOOLEAN;

TYPE Nudge = [-1..1];

TYPE Drc = RECORD
    DRow: Nudge;
    DCol: Nudge;
END;

TYPE DrcArray = ARRAY Direction OF Drc;

CONST Deltas = DrcArray {
    {-1,  0},
    { 1,  0},
    { 0,  1},
    { 0, -1} 
};

(*** Two_Dimensional_Map ***)

TYPE LocationRecord = RECORD
    Row, Col: CARDINAL;
END;

TYPE Object = RECORD
    (* to use this, cast enum/pointer/whatever  to a cardinal and back *)
    (* see day10 for an example *)
    Value: CARDINAL;
END;

(** Map types **)

TYPE MapArray     = ARRAY CARDINAL, CARDINAL OF Object;
TYPE MapRef       = POINTER TO MapArray;

(* gm2 has issues with two-dimensional arrays as parameters, so we use this *)
(* see example (s) in the m2_bugs folder                                     *)
TYPE MapLineArray = ARRAY CARDINAL OF Object;
TYPE MapLine      = POINTER TO MapLineArray;

PROCEDURE NewMap (Row_Length, Col_Length: CARDINAL): MapRef;
PROCEDURE ReleaseMap (VAR Map: MapRef; Rows, Cols: CARDINAL);

(** Location vectors **)

TYPE LocationVector;

PROCEDURE NewVector (): LocationVector;
PROCEDURE ReleaseVector (VAR Vector: LocationVector);
PROCEDURE Append (VAR Vector: LocationVector; Location: LocationRecord);
PROCEDURE Element (Vector: LocationVector; Index: CARDINAL): LocationRecord;

(** Location queues **)

TYPE LocationQueue;

PROCEDURE NewQueue (): LocationQueue;
PROCEDURE ReleaseQueue (VAR Queue: LocationQueue);
PROCEDURE Enqueue (VAR Queue: LocationQueue; Location: LocationRecord);
PROCEDURE Dequeue (VAR Queue: LocationQueue): LocationRecord;
PROCEDURE IsEmpty (Queue: LocationQueue): BOOLEAN;

(*** Two_Dimensional_Map_IO ***)

TYPE Serializer   = PROCEDURE (Object): CHAR;
TYPE Deserializer = PROCEDURE (CHAR): Object;

PROCEDURE ReadInput (
    Filename    : ARRAY OF CHAR;
    Map         : MapLine;
    Rows, Cols  : CARDINAL;
    Deserialize : Deserializer
);

PROCEDURE PutMap (
    Map        : MapLine;
    Rows, Cols : CARDINAL;
    Serialize  : Serializer
);

END Common.